# maven-jenkins-pipeline
A sample maven pipeline based CI/CD with docker

== Manual Steps

. *Start database*: `docker run -d --name db -p 8091-8093:8091-8093 -p 11210:11210 arungupta/oreilly-couchbase:latest`
. *Run app*
.. Using Maven
... *Build app*: `mvn -f webapp/pom.xml clean package`
... *Run app*: `mvn -f webapp/pom.xml exec:java -DskipTests`
... *Run test*: `mvn -f webapp/pom.xml test`
.. Using Docker
... *Build app*: `docker-compose build app`
... *Run app*:
+
```
docker-compose run -e DB_URI=`docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' db` app
```
+
... *Run test*: `mvn test`

== Jenkins

=== Configure

. Download Jenkins, this was tested with 2.21[http://mirrors.jenkins-ci.org/war/2.21/jenkins.war].
. Start Jenkins: `JENKINS_HOME=~/.jenkins java -jar ~/Downloads/jenkins-2.21.war --httpPort=9090`
. Create First Admin User, `Save and Finish`.
. Install suggested plugins
. `Manage Jenkins`, `Global Tool Configuration`, configure Maven, use name `Maven3` (this name is used in `Jenkinsfile`)
. `Manage Jenkins`, `Manage Plugins`, `Available`, install `CloudBees Docker Pipeline` and `Jacoco` and `Sonar Scanner` plugins, `Install without restart`, select `Restart Jenkins`
. Make sure you have Sonar sever running (i.e. http://localhost:9000). Login with default credentials admin/admin. 
. Create user in security tab and generate an access token, also create a Project `WebApp` with a peoject key as used in sonar-project.properties
. Download SonarQube scanner from[https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner].
. Go to the Manage Jenkins > Configure system and provide the credentials for Sonar Server 
. Add the “SonarQube Server” name running on URL http://localhost:9000 alongwith user authentication key generated in SonarQube Server user administration page
. Make sure the Sonar scanner path is configured properly as its path is hard coded in Jenkinsfile. You can modify the path as applicable

=== Create Project

. Create a new project of the type `Pipeline`
. Configure git repo
. `Build Now`
